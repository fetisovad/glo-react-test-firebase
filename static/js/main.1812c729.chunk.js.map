{"version":3,"sources":["image/navbar/logo.svg","image/navbar/sign.svg","utils/context.js","Components/NavBar/NavBar.js","Components/Menu/ListItem.js","image/main/banner.png","Components/Menu/Banner.js","Components/Menu/Menu.js","Components/Style/GlobalStyle.js","utils/formatCurrency.js","Components/ModalItem/CountItem.js","utils/totalPriceItems.js","Components/ModalItem/Toppings.js","Components/ModalItem/Choices.js","Components/ModalItem/ModalItem.js","Components/hooks/useCount.js","Components/hooks/useToppings.js","Components/hooks/useChoices.js","image/trash.svg","Components/Order/OrderListItem.js","Components/Order/Order.js","Components/hooks/useTitle.js","Components/Order/OrderConfirm.js","utils/projection.js","App.js","Components/hooks/useAuth.js","Components/hooks/useOpenItem.js","Components/hooks/useOrders.js","Components/hooks/useDB.js","Components/hooks/useOrderConfirm.js","index.js"],"names":["Context","React","createContext","NavBarStyled","styled","header","Logo","div","NavLogo","img","NavTitle","h1","Login","button","User","NavBar","useContext","auth","authentication","login","logout","src","logoImg","alt","signImg","displayName","onClick","ListItemStyled","ul","Item","li","ListItem","itemList","setOpenItem","index","map","item","name","price","toLocaleString","style","currency","id","BannerStyled","bannerImg","Banner","MenuStyled","main","SectionMenu","section","Menu","openItem","dbMenu","burger","other","className","GlobalStyle","createGlobalStyle","formatCurrency","value","CountWrapper","CountInput","input","ButtonCount","CountItem","count","setCount","onChange","disabled","type","min","max","totalPriceItems","order","countTopping","topping","filter","checked","length","priceTopping","ToppingsWrapper","ToppingsLabel","label","ToppingsCheckbox","ToppingsTitle","h4","ToppingsLabelsWrapper","Toppings","toppings","checkToppings","i","ChoicesWrapper","ChoicesLabel","ChoicesCheckbox","ChoicesTitle","ChoicesLabelsWrapper","Choices","choice","changeChoices","choices","Overlay","Modal","ItemInfo","ItemInfoHeader","ItemInfoTitle","AddButton","TotalPriceItem","ModalItem","orders","setOrders","counter","startCount","useState","e","target","useCount","readyTopping","getTopping","setToppings","useToppings","setChoices","useChoices","isEdit","newOrders","TrashButton","trashImg","OrderItemStyled","ItemName","span","ItemPrice","ToppingsList","ToppingListItem","OrderListItem","deleteOrder","deleteBntRef","useRef","current","ref","OrderStyled","OrderTitle","h2","OrderContent","OrderList","Total","EmptyList","p","Order","setOpenOrderConfirm","orderConfirm","total","reduce","result","totalCounter","res","marginLeft","transform","useTitle","useEffect","document","title","rulesData","arr","obj","Text","h3","sendOrder","database","newOrder","rules","keys","Object","newObj","key","val","fn","projection","push","set","nameClient","email","OrderConfirm","height","position","top","right","marginTop","display","alignItems","width","justifyContent","alert","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","authFirebase","setAuthentication","provider","GoogleAuthProvider","onAuthStateChanged","user","signInWithPopup","signOut","then","catch","console","log","useAuth","useOpenItem","useOrders","db","setDB","on","snapshot","useDB","openOrderConfirm","useOrderConfirm","Provider","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1812c729.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.03f3b0f4.svg\";","export default __webpack_public_path__ + \"static/media/sign.b9361011.svg\";","import React from \"react\";\n\nexport const Context = React.createContext()","import React, { useContext } from 'react';\nimport styled from \"styled-components\";\nimport logoImg from '../../image/navbar/logo.svg'\nimport signImg from '../../image/navbar/sign.svg'\nimport { Context } from \"../../utils/context\";\n\nconst NavBarStyled = styled.header`\n  background: #299B01;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  padding: 0 20px;\n  height: 80px;\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 999;\n  width: 100%;\n`\n\nconst Logo = styled.div`\n  display: flex;\n  align-items: center;\n  color: #FFFFFF;\n`\n\nconst NavLogo = styled.img`\n  margin-right: 17px;\n  width: 50px;\n`\n\nconst NavTitle = styled.h1`\n  font-size: 24px;\n`\n\nconst Login = styled.button`\n  margin-left: auto;\n  border: none;\n  background: transparent;\n  display: flex;\n  align-items: center;\n  flex-direction: column;\n  width: 32px;\n  font-size: 16px;\n  color: #FFFFFF;\n`\n\nconst User = styled.button`\n  margin-left: auto;\n  margin-right: 80px;\n  border: none;\n  background: transparent;\n  display: flex;\n  align-items: center;\n  width: 32px;\n  font-size: 16px;\n  color: #FFFFFF;\n  div {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    font-size: 14px;\n  }\n  span {\n    margin-left: 20px;\n  }\n`\n\nconst NavBar = () => {\n    const { auth: {authentication, login, logout} } = useContext(Context)\n\n    return (\n        <NavBarStyled>\n            <Logo>\n                <NavLogo src={logoImg} alt='logo'/>\n                <NavTitle>MY BURGERS</NavTitle>\n            </Logo>\n            {authentication\n                ?\n                (\n                    <User>\n                        <div>\n                            <img src={signImg} alt={authentication.displayName}/>\n                            <p>{authentication.displayName}</p>\n                        </div>\n                        <span onClick={logout}>X</span>\n                    </User>\n                )\n                :\n                (\n                    <Login onClick={login}>\n                        <img src={signImg} alt=\"img\"/>\n                        <span>Войти</span>\n                    </Login>\n                )\n            }\n        </NavBarStyled>\n    );\n};\n\nexport default NavBar;","import React from 'react';\nimport styled from 'styled-components';\n\nconst ListItemStyled = styled.ul`\n    display: flex;\n    justify-content: space-around;\n    flex-wrap: wrap;\n`;\n\nconst Item = styled.li`\n    position: relative;\n    z-index: 1;\n    width: 400px;\n    height: 155px;\n    background-image: ${({ img }) => `url(${img})`};\n    background-position: center;\n    background-size: cover;\n    margin: 30px 30px 0 0;\n    padding: 15px;\n    color: white;\n    font-size: 30px;\n    &:after {\n        content: '';\n        position: absolute;\n        top: 0;\n        right: 0;\n        bottom: 0;\n        left: 0;\n        background-color: black;\n        opacity: 30%;\n        z-index: -1;\n    }\n    &:hover {\n        cursor: pointer;\n        box-shadow: inset 0 0 50px 30px black;\n        &:after {\n            opacity: 0;\n        }\n    }\n`;\n\nconst ListItem = ({ itemList, setOpenItem, index }) => {\n    return (\n        <ListItemStyled>\n            {itemList.map((item) => (\n                <Item\n                    key={item.id}\n                    img={item.img}\n                    onClick={() => setOpenItem(item)}\n                >\n                    <p>{item.name}</p>\n                    <p>\n                        {item.price.toLocaleString('ru-RU', {\n                            style: 'currency',\n                            currency: 'RUB',\n                        })}\n                    </p>\n                </Item>\n            ))}\n        </ListItemStyled>\n    );\n};\n\nexport default ListItem;\n","export default __webpack_public_path__ + \"static/media/banner.9b6cf3ee.png\";","import React from 'react';\nimport styled from 'styled-components';\nimport bannerImg from '../../image/main/banner.png';\n\nconst BannerStyled = styled.div`\n    height: 210px;\n    width: 100%;\n    background-image: url(${bannerImg});\n    background-position: center;\n    background-size: cover;\n`;\n\nconst Banner = () => {\n    return <BannerStyled />;\n};\n\nexport default Banner;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport ListItem from './ListItem';\nimport Banner from './Banner';\nimport './Menu.css'\nimport { Context } from \"../../utils/context\";\n\nconst MenuStyled = styled.main`\n  background: #ccc;\n  margin-top: 80px;\n  margin-left: 380px;\n`;\n\nconst SectionMenu = styled.section`\n  padding: 30px;\n`;\n\nconst Menu = () => {\n\n    const {openItem: {setOpenItem}, dbMenu} = useContext(Context)\n\n\n    return (\n        <MenuStyled>\n            <Banner/>\n            {dbMenu\n                ?\n                <>\n                    <SectionMenu>\n                        <h2>Бургеры</h2>\n                        <ListItem itemList={dbMenu.burger} setOpenItem={setOpenItem}/>\n                    </SectionMenu>\n                    <SectionMenu>\n                        <h2>Закуски / Напитки</h2>\n                        <ListItem itemList={dbMenu.other} setOpenItem={setOpenItem}/>\n                    </SectionMenu>\n                </>\n                    :\n                    <div className='example'>\n                        <div className='block'>\n                            <div className='item'/>\n                            <div className='item'/>\n                            <div className='item'/>\n                            <div className='item'/>\n                            <div className='item'/>\n                            <div className='item'/>\n                            <div className='item'/>\n                            <div className='item'/>\n                        </div>\n                    </div>\n            }\n        </MenuStyled>\n    );\n};\n\nexport default Menu;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    html {\n        box-sizing: border-box;\n    }\n\n    *,\n    *:before,\n    *:after {\n        box-sizing: inherit;\n    }\n\n    body {\n        margin: 0;\n        padding: 0;\n        font-family: Roboto, sans-serif;\n        font-size: 20px;\n        color: black;\n    }\n\n    a {\n        text-decoration: none;\n        color: inherit;\n    }\n\n    ul {\n        list-style: none;\n        padding: 0;\n        margin: 0;\n    }\n\n    h1, h2, h3, h4, h5, h6 {\n        font-family: 'Pacifico', cursive;\n        padding: 0;\n        margin: 0;\n    }\n\n    p {\n        padding: 0;\n        margin: 0;\n    }\n    \n    button {\n        cursor: pointer;\n    }\n\n    img {\n        max-width: 100%;\n        height: auto;\n    }\n\n    input, button {\n        font: inherit;\n    }\n\n    input[type='number'] {\n        -moz-appearance: textfield;\n    }\n\n    input::-webkit-outer-spin-button,\n    input::-webkit-inner-spin-button {\n        -webkit-appearance: none;\n    }\n`;\n\nexport default GlobalStyle;\n","export default function formatCurrency(value) {\n    return value.toLocaleString('ru-RU', {\n        style: 'currency', currency: 'RUB'\n    })\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst CountWrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n`;\n\nconst CountInput = styled.input`\n    width: 50px;\n    font-size: 20px;\n    margin: 0 10px;\n`;\n\nconst ButtonCount = styled.button`\n    background-color: transparent;\n    border: 1px solid grey;\n    border-radius: 2px;\n`;\n\nconst CountItem = ({count, setCount, onChange}) => {\n    return (\n        <CountWrapper>\n            <span>Количество</span>\n            <div>\n                <ButtonCount disabled={count <= 1} onClick={() => setCount(count - 1)}>-</ButtonCount>\n                <CountInput type=\"number\" min=\"1\" max=\"100\" value={count < 1 ? 1 : count} onChange={onChange} />\n                <ButtonCount onClick={() => setCount(count + 1)}>+</ButtonCount>\n            </div>\n        </CountWrapper>\n    );\n};\n\nexport default CountItem;\n","export default function totalPriceItems(order) {\n    const countTopping = order.topping && order.topping.filter(item => item.checked).length\n    const priceTopping = (order.price * 0.1) * countTopping\n\n    if(order.topping) {\n        return (order.price + priceTopping) * order.count;\n    } else {\n        return order.price * order.count\n    }\n}","import React from 'react';\nimport styled from 'styled-components';\n\nconst ToppingsWrapper = styled.div`\n    margin-top: 15px;\n    width: 100%;\n`;\n\nconst ToppingsLabel = styled.label`\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    width: 33%;\n    justify-content: center;\n    margin: 5px 0;\n    font-family: 'Roboto', sans-serif;\n    font-size: 20px;\n    color: #000000;\n`;\n\nconst ToppingsCheckbox = styled.input`\n    cursor: pointer;\n    margin-right: 5px;\n`;\n\nconst ToppingsTitle = styled.h4`\n    font-size: 24px;\n    color: #000000;\n`;\n\nconst ToppingsLabelsWrapper = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n`;\n\nconst Toppings = ({ toppings, checkToppings }) => {\n    return (\n        <ToppingsWrapper>\n            <ToppingsTitle>Добавки</ToppingsTitle>\n            <ToppingsLabelsWrapper>\n                {toppings.map((topping, i) => {\n                    return (\n                        <ToppingsLabel key={i}>\n                            <ToppingsCheckbox\n                                type=\"checkbox\"\n                                checked={topping.checked}\n                                onChange={() => checkToppings(i)}\n                            />\n                            {topping.name}\n                        </ToppingsLabel>\n                    );\n                })}\n            </ToppingsLabelsWrapper>\n        </ToppingsWrapper>\n    );\n};\n\nexport default Toppings;\n","import React from 'react';\nimport styled from \"styled-components\";\n\nconst ChoicesWrapper = styled.div`\n  margin-top: 15px;\n  width: 100%;\n`\n\nconst ChoicesLabel = styled.label`\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  width: 33%;\n  justify-content: center;\n  margin: 5px 0;\n  font-family: 'Roboto', sans-serif;\n  font-size: 20px;\n  color: #000000;\n`\n\nconst ChoicesCheckbox = styled.input`\n  cursor: pointer;\n  margin-right: 5px;\n`\n\nconst ChoicesTitle = styled.h4`\n  font-size: 24px;\n  color: #000000;\n`\n\nconst ChoicesLabelsWrapper = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n`\n\nconst Choices = ({ choice, changeChoices, openItem: { choices } }) => {\n    return (\n        <ChoicesWrapper>\n            <ChoicesTitle>Добавки</ChoicesTitle>\n            <ChoicesLabelsWrapper>\n                {choices.map((item, i) =>\n                    <ChoicesLabel key={i}>\n                        <ChoicesCheckbox\n                            type='radio'\n                            name='choices'\n                            checked={choice === item}\n                            onChange={changeChoices}\n                            value={item}\n                        />\n                        {item}\n                    </ChoicesLabel>\n                )}\n            </ChoicesLabelsWrapper>\n        </ChoicesWrapper>\n    );\n};\n\nexport default Choices;","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport formatCurrency from '../../utils/formatCurrency';\nimport CountItem from './CountItem';\nimport { useCount } from '../hooks/useCount';\nimport totalPriceItems from '../../utils/totalPriceItems';\nimport Toppings from './Toppings';\nimport { useToppings } from '../hooks/useToppings';\nimport { useChoices } from '../hooks/useChoices';\nimport Choices from './Choices';\nimport { Context } from \"../../utils/context\";\n\nexport const Overlay = styled.div`\n    position: fixed;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background-color: rgba(0, 0, 0, 0.5);\n    z-index: 20;\n`;\n\nconst Modal = styled.div`\n    background-color: #fff;\n    width: 600px;\n    height: 600px;\n    display: flex;\n    flex-direction: column;\n    padding: 0 0 25px -0px;\n`;\n\nconst ItemInfo = styled.div`\n    width: 100%;\n    padding: 0 40px 25px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-between;\n`;\n\nconst ItemInfoHeader = styled.div`\n    padding: 0 40px 25px;\n    display: flex;\n    align-items: center;\n    justify-content: space-between;\n    font-family: 'Pacifico', cursive;\n    font-size: 24px;\n\n    &-span {\n        font-family: 'Pacifico', cursive;\n    }\n`;\n\nconst ItemInfoTitle = styled.h4`\n    font-size: 24px;\n`;\n\nconst Banner = styled.div`\n    height: 200px;\n    width: 100%;\n    background-image: url(${({ img }) => img});\n    background-position: center;\n    background-size: cover;\n    margin-bottom: 20px;\n`;\n\nexport const AddButton = styled.button`\n    margin-top: auto;\n    padding: 20px 75px;\n    font-family: 'Roboto', sans-serif;\n    font-size: 21px;\n    color: #ffffff;\n    background: #299b01;\n    align-self: center;\n    border: none;\n    &:disabled {\n        background-color: grey;\n    }\n    &:hover {\n        transform: scale(1.07);\n    }\n`;\n\nexport const TotalPriceItem = styled.div`\n    margin-top: 40px;\n    display: flex;\n    justify-content: space-between;\n    width: 100%;\n`;\n\nconst ModalItem = () => {\n    const {openItem: {openItem, setOpenItem}, orders: {orders, setOrders}} = useContext(Context)\n\n    const counter = useCount(openItem.count);\n    const toppings = useToppings(openItem);\n    const choices = useChoices(openItem);\n    const isEdit = openItem.index > -1;\n\n    const closeModal = (e) => {\n        if (e.target.id === 'overlay') {\n            setOpenItem(null);\n        }\n    };\n\n    const order = {\n        ...openItem,\n        count: counter.count,\n        topping: toppings.toppings,\n        choice: choices.choice,\n    };\n\n    const addToOrder = () => {\n        setOrders([...orders, order]);\n        setOpenItem(null);\n    };\n\n    const editOrder = () => {\n        const newOrders = [...orders];\n        newOrders[openItem.index] = order;\n        setOrders(newOrders);\n        setOpenItem(null);\n    };\n\n    return (\n        <Overlay id=\"overlay\" onClick={closeModal}>\n            <Modal>\n                <Banner img={openItem.img} />\n                <ItemInfoHeader>\n                    <ItemInfoTitle>{openItem.name}</ItemInfoTitle>\n                    <span>{formatCurrency(openItem.price)}</span>\n                </ItemInfoHeader>\n                <ItemInfo>\n                    <CountItem {...counter} />\n                    {openItem.toppings && <Toppings {...toppings} />}\n                    {openItem.choices && (\n                        <Choices {...choices} openItem={openItem} />\n                    )}\n                    <TotalPriceItem>\n                        <span>Цена</span>\n                        <span>{formatCurrency(totalPriceItems(order))}</span>\n                    </TotalPriceItem>\n                </ItemInfo>\n                <AddButton\n                    onClick={isEdit ? editOrder : addToOrder}\n                    disabled={order.choices && !order.choice}\n                >\n                    {isEdit ? 'Редактировать' : 'Добавить'}\n                </AddButton>\n            </Modal>\n        </Overlay>\n    );\n};\n\nexport default ModalItem;\n","import { useState } from 'react';\n\nexport function useCount(startCount) {\n    const [count, setCount] = useState(startCount || 1);\n\n    const onChange = (e) => setCount(e.target.value);\n\n    return {\n        count,\n        setCount,\n        onChange,\n    };\n}\n","import { useState } from 'react';\n\n// const getTopping = toppings => toppings && toppings.map(topping => ({\n//     name: topping,\n//     checked: false\n// }))\n\nconst getTopping = (toppings) =>\n    toppings.map((topping) => ({\n        name: topping,\n        checked: false,\n    }));\n\nexport function useToppings(openItem) {\n    // const [toppings, setToppings] = useState(getTopping(openItem.toppings))\n\n    // const checkToppings = index => {\n    //     setToppings(toppings.map((topping, i) => {\n    //         if(i === index) {\n    //             topping.checked = !topping.checked\n    //         }\n    //         return topping;\n    //     }))\n    // }\n\n\n    const readyTopping = openItem.topping ? openItem.topping : openItem.toppings ? getTopping(openItem.toppings) : []\n\n    const [toppings, setToppings] = useState(readyTopping);\n\n    const checkToppings = (index) => {\n        setToppings(\n            toppings.map((topping, i) => {\n                if (i === index) {\n                    topping.checked = !topping.checked;\n                }\n                return topping;\n            })\n        );\n    };\n\n    return { toppings, checkToppings };\n}\n","import {useState} from \"react\";\n\nexport function useChoices(openItem) {\n    const [choice, setChoices] = useState()\n\n    function changeChoices(e) {\n        setChoices(e.target.value)\n    }\n    return {\n        choice, changeChoices\n    }\n}","export default __webpack_public_path__ + \"static/media/trash.08fdcf71.svg\";","import React, { useRef } from 'react';\nimport styled from 'styled-components';\nimport trashImg from '../../image/trash.svg';\nimport formatCurrency from '../../utils/formatCurrency';\nimport totalPriceItems from '../../utils/totalPriceItems';\n\nconst TrashButton = styled.button`\n    width: 24px;\n    height: 24px;\n    border: none;\n    background-image: url(${trashImg});\n    background-color: transparent;\n    cursor: pointer;\n    background-size: cover;\n    background-position: center;\n    background-repeat: no-repeat;\n`;\n\nconst OrderItemStyled = styled.li`\n    display: flex;\n    margin: 10px 0;\n    flex-wrap: wrap;\n    border: 1px solid black;\n    border-radius: 10px;\n    cursor: pointer;\n`;\n\nconst ItemName = styled.span`\n    flex-grow: 1;\n`;\n\nconst ItemPrice = styled.span`\n    margin-left: 20px;\n    margin-right: 10px;\n    min-width: 65px;\n    text-align: right;\n`;\n\nconst ToppingsList = styled.ul`\n    flex-basis: 100%;\n    padding: 2px 2px 2px 20px;\n`;\n\nconst ToppingListItem = styled.li`\n    font-size: 16px;\n`;\n\nconst OrderListItem = ({ order, setOpenItem, deleteOrder, index }) => {\n    const deleteBntRef = useRef(null);\n    \n    return (\n        <OrderItemStyled\n            onClick={(e) => e.target !== deleteBntRef.current && setOpenItem({ ...order, index })}\n        >\n            <ItemName>\n                {order.name} {order.choice}\n            </ItemName>\n            <span>{order.count}</span>\n            <ItemPrice>{formatCurrency(totalPriceItems(order))}</ItemPrice>\n            <TrashButton\n                ref={deleteBntRef}\n                onClick={() => deleteOrder(index)}\n            />\n            <ToppingsList>\n                {order.topping &&\n                    order.topping.map(\n                        (topping, index) =>\n                            topping.checked && (\n                                <ToppingListItem key={index}>\n                                    {topping.name}\n                                </ToppingListItem>\n                            )\n                    )}\n            </ToppingsList>\n        </OrderItemStyled>\n    );\n};\n\nexport default OrderListItem;\n","import React, { useContext } from 'react';\nimport styled from 'styled-components';\nimport { AddButton } from '../ModalItem/ModalItem';\nimport OrderListItem from './OrderListItem';\nimport formatCurrency from '../../utils/formatCurrency';\nimport totalPriceItems from '../../utils/totalPriceItems';\nimport { Context } from \"../../utils/context\";\n\nconst OrderStyled = styled.section`\n  position: fixed;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  top: 80px;\n  left: 0;\n  background-color: #fff;\n  min-width: 380px;\n  height: calc(100% - 80px);\n  box-shadow: 3px 4px 5px rgba(0, 0, 0, 0.25);\n  padding: 20px;\n`;\n\nexport const OrderTitle = styled.h2`\n  text-align: center;\n  font-size: 39px;\n  text-transform: uppercase;\n`;\n\nconst OrderContent = styled.div`\n  flex-grow: 1;\n  width: 100%;\n`;\n\nconst OrderList = styled.ul``;\n\nexport const Total = styled.div`\n  display: flex;\n  justify-content: space-between;\n  margin-top: 100%;\n  margin-bottom: 20px;\n`;\n\nconst EmptyList = styled.p`\n  text-align: center;\n  margin: 20px 0;\n`;\n\nconst Order = () => {\n    const {auth: {authentication, login}, openItem: { setOpenItem}, orders: {orders, setOrders}, orderConfirm: {setOpenOrderConfirm}} = useContext(Context)\n\n    const total = orders.reduce(\n        (result, order) => result + totalPriceItems(order),\n        0\n    );\n\n    const totalCounter = orders.reduce((res, order) => res + order.count, 0);\n\n    const deleteOrder = (index) => {\n        const newOrders = orders.filter((item, i) => index !== i);\n        setOrders(newOrders);\n        setOpenItem(null);\n    };\n\n    const checkoutOrder = () => {\n        if (!authentication) login();\n        else {\n            setOpenOrderConfirm(true);\n        }\n    };\n\n    return (\n        <>\n            <OrderStyled>\n                <OrderTitle>Ваш заказ</OrderTitle>\n                <OrderContent>\n                    {orders.length ? (\n                        <OrderList>\n                            {orders.map((order, index) => {\n                                return (\n                                    <OrderListItem\n                                        key={index}\n                                        order={order}\n                                        index={index}\n                                        setOpenItem={setOpenItem}\n                                        deleteOrder={deleteOrder}\n                                    />\n                                );\n                            })}\n                        </OrderList>\n                    ) : (\n                        <EmptyList>Список заказов пуст</EmptyList>\n                    )}\n                    {orders.length ?\n                        <>\n                            <Total>\n                                <span>Итого</span>\n                                <span style={{ marginLeft: '80px' }}>\n                            {totalCounter}\n                        </span>\n                                <span>{formatCurrency(total)}</span>\n                            </Total>\n                            <AddButton\n                                style={{\n                                    marginLeft: '50%',\n                                    transform: 'translateX(-50%)',\n                                }}\n                                onClick={checkoutOrder}\n                            >\n                                Оформить\n                            </AddButton>\n                        </>\n                        : null\n                    }\n                </OrderContent>\n            </OrderStyled>\n        </>\n    );\n};\n\nexport default Order;\n","import { useEffect } from \"react\";\n\nconst useTitle = openItem => {\n    useEffect(() => {\n        document.title = openItem ? openItem.name : `MY BURGERS`\n    }, [openItem])\n}\n\nexport default useTitle;","import React, { useContext } from 'react';\nimport styled from \"styled-components\";\nimport { projection } from '../../utils/projection';\nimport totalPriceItems from \"../../utils/totalPriceItems\";\nimport { OrderTitle, Total } from \"./Order\";\nimport { AddButton, Overlay, TotalPriceItem } from \"../ModalItem/ModalItem\";\nimport formatCurrency from \"../../utils/formatCurrency\";\nimport { Context } from \"../../utils/context\";\n\nconst rulesData = {\n    name: ['name'],\n    price: ['price'],\n    count: ['count'],\n    topping: [\n        'topping',\n        (arr) => arr.filter((obj) => obj.checked).map((obj) => obj.name),\n        (arr) => (arr.length ? arr : 'no topping'),\n    ],\n    choice: ['choice', (item) => (item ? item : 'no choices')],\n};\n\nconst Modal = styled.div`\n  background-color: white;\n  width: 600px;\n  padding: 30px;\n`\n\nconst Text = styled.h3`\n  text-align: center;\n  margin-bottom: 30px;\n`\n\nconst sendOrder = (database, orders, authentication) => {\n    const newOrder = orders.map(projection(rulesData));\n    database.ref('orders').push().set({\n        nameClient: authentication.displayName,\n        email: authentication.email,\n        order: newOrder,\n    });\n};\n\nconst OrderConfirm = () => {\n\n    const {\n        orders: { orders, setOrders },\n        auth: { authentication },\n        orderConfirm: { setOpenOrderConfirm },\n        database\n    } = useContext(Context)\n\n    const total = orders.reduce(\n        (result, order) => result + totalPriceItems(order),\n        0\n    );\n\n    const closeModal = (e) => {\n        if (e.target.id === 'overlay') {\n            setOpenOrderConfirm(false)\n        }\n    };\n\n    return (\n        <div>\n            <Overlay id='overlay' onClick={closeModal}>\n                <Modal style={{ height: '35%' }}>\n                    <OrderTitle>{authentication.displayName}</OrderTitle>\n                    <Text>Осталось только подтвердить Ваш заказ</Text>\n                    <Total style={{\n                        position: 'absolute',\n                        top: '47%',\n                        right: '40%',\n                        marginTop: '0',\n                        display: 'flex',\n                        alignItems: 'end',\n                        width: '20%',\n                        justifyContent: 'space-around'\n                    }}>\n                        <span>Итого</span>\n                        <TotalPriceItem style={{ marginLeft: '50%' }}>{formatCurrency(total)}</TotalPriceItem>\n                    </Total>\n                    <AddButton style={{ position: 'absolute', top: '57%', right: '40%' }} onClick={() => {\n                        sendOrder(database, orders, authentication)\n                        setOrders([])\n                        setOpenOrderConfirm(false)\n                        alert('Заказ оформлен, иди нахуй')\n                    }}>Подтвердить</AddButton>\n                </Modal>\n            </Overlay>\n        </div>\n    );\n};\n\nexport default OrderConfirm;","export const projection = (rules) => {\n    const keys = Object.keys(rules);\n    return (obj) =>\n        keys.reduce((newObj, key) => {\n            newObj[key] = rules[key].reduce(\n                (val, fn, i) => (i ? fn(val) : obj[fn]),\n                null\n            );\n            return newObj;\n        }, {});\n};\n","import React from 'react';\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport 'firebase/compat/database';\nimport NavBar from './Components/NavBar/NavBar';\nimport Menu from './Components/Menu/Menu';\nimport GlobalStyle from './Components/Style/GlobalStyle';\nimport ModalItem from './Components/ModalItem/ModalItem';\nimport Order from './Components/Order/Order';\nimport { useOpenItem } from './Components/hooks/useOpenItem';\nimport { useOrders } from './Components/hooks/useOrders';\nimport { useAuth } from './Components/hooks/useAuth';\nimport useTitle from \"./Components/hooks/useTitle\";\nimport { useDB } from \"./Components/hooks/useDB\";\nimport { useOrderConfirm } from \"./Components/hooks/useOrderConfirm\";\nimport OrderConfirm from \"./Components/Order/OrderConfirm\";\nimport { Context } from \"./utils/context\";\n\nconst firebaseConfig = {\n    apiKey: 'AIzaSyC2ekJq3NL4DjXrGs3Hx6LnmUc2Of2VHIY',\n    authDomain: 'glo-react-test.firebaseapp.com',\n    databaseURL:\n        'https://glo-react-test-default-rtdb.europe-west1.firebasedatabase.app',\n    projectId: 'glo-react-test',\n    storageBucket: 'glo-react-test.appspot.com',\n    messagingSenderId: '16329223261',\n    appId: '1:16329223261:web:cdcf101a57a2a95108b1b4',\n};\n\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n    const auth = useAuth(firebase.auth);\n    const openItem = useOpenItem();\n    const orders = useOrders();\n    useTitle(openItem.openItem)\n    const database = firebase.database()\n    const dbMenu = useDB(database)\n    const orderConfirm = useOrderConfirm()\n\n\n    return (\n        <Context.Provider value={{auth, openItem, dbMenu, orders, orderConfirm, database}}>\n            <GlobalStyle />\n            <NavBar/>\n            <Order/>\n            <Menu/>\n            {openItem.openItem ? <ModalItem/> : null}\n            {orderConfirm.openOrderConfirm &&\n                <OrderConfirm/>\n            }\n        </Context.Provider>\n    );\n}\n\nexport default App;\n","import {useState, useEffect} from \"react\";\n\nexport function useAuth(authFirebase) {\n    const [authentication, setAuthentication] = useState(null)\n\n    const auth = authFirebase()\n    const provider = new authFirebase.GoogleAuthProvider()\n\n    const login = () => auth.signInWithPopup(provider)\n    const logout = () => auth.signOut()\n        .then()\n        .catch(e => console.log(e))\n\n    useEffect(() => {\n        auth.onAuthStateChanged(user => {\n            if(user) {\n                setAuthentication(user)\n            } else {\n                setAuthentication(null)\n            }\n        })\n    }, [auth, authentication])\n\n    return  {authentication, login, logout}\n}\n","import {useState} from 'react';\n\nexport function useOpenItem() {\n    const [openItem, setOpenItem] = useState(null)\n\n    return {\n        openItem, setOpenItem\n    }\n}","import {useState} from 'react'\n\nexport function useOrders() {\n    const [orders, setOrders] = useState([])\n\n    return {\n        orders, setOrders\n    }\n}","import { useEffect, useState } from \"react\";\n\nexport const useDB = (database) => {\n    const [db, setDB] = useState(null)\n\n    useEffect(() => {\n        const dbRef = database.ref('goods')\n        dbRef.on('value', (snapshot) => {\n            setDB(snapshot.val())\n        })\n    }, [database])\n\n    return db\n}","import { useState } from \"react\";\n\nexport const useOrderConfirm = () => {\n    const [openOrderConfirm, setOpenOrderConfirm] = useState(false)\n\n    return { openOrderConfirm, setOpenOrderConfirm }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}